import "bls12381pairing3.scrypt";

contract bls12381testcase1 {

    public function alphaBetaMillerLoop() {
        PointG1 Alpha = [
            3234600896901070609809958269502658707186561808028556668709747948485642671597866659835866051000626831326309925764060,
            760490433841756477505279482365408801095825229333550477583140793265915919464873358564487272799456127759625971580364,
            1
        ];
        PointG2 Beta = [[
                62735191543702063154706029262756987319026007757378915340324355829736710033180622923358348589213198484437880754158,
                3791946046381181804610386025410142875944701854546880137116216000976654943613995494342057713023045164661431055409369
            ],[
                946067787623152104246126785151161631120864034223976708735926400963995516363270043366163387120481063286712904156154,
                2990618629272669949054147756819268207701675966559344083455331473867257850689258675859329755131916243884708237181737      
            ],[
                1,
                0
            ]];

        loop(3) : k {
            Alpha[k] = BLS12381.toMont(Alpha[k]);
        }
        loop(3) : j {
            loop(2) : k {
                Beta[j][k] = BLS12381.toMont(Beta[j][k]);
            }
        }

        // bytes aa = b'00';
        // loop(3) : j {
        //     loop(2) : k {
        //         aa = reverseBytes(num2bin(Beta[j][k], 48), 48);
        //         require(true);
        //     }
        // }
        // loop(3) : j {
        //     aa = reverseBytes(num2bin(Alpha[j], 48), 48);
        //     require(true);
        // }

        Engine bls = BLS12381Pairing.NewPairingEngine();
        bls = BLS12381Pairing.AddPair(bls, Alpha, Beta);

        fe12 ff = BLS12381Pairing.millerLoop(bls);
        bytes bb = b'00';
        loop(2) : i {
            loop(3) : j {
                loop(2) : k {
                    bb = reverseBytes(num2bin(ff[i][j][k], 48), 48);
                    require(true);
                }
            }
        }

        require(true);
    }
}
